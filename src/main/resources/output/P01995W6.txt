

Create Function RCTG01995_HUB_MART_RPT.BUS_DAY_DIFF (STDT VARCHAR(20), ENDT
VARCHAR(20))
        Returns INTEGER
        Specific BUS_DAY_DIFF
        Language SQL
        Not Deterministic
        No External Action
        Reads SQL Data
        Begin Atomic
DECLARE DATE_DIFF INTEGER;DECLARE BEGIN_DATE_V DATE;DECLARE END_DATE_V DATE;DECLARE STDT_FL INTEGER;DECLARE ENDT_FL INTEGER;DECLARE BEGIN_DATE DATE;DECLARE END_DATE DATE;
SET BEGIN_DATE = DATE(STDT);SET END_DATE = DATE(ENDT);
SET BEGIN_DATE_V = (CASE
WHEN DAYOFWEEK(BEGIN_DATE) = 7 THEN (DATE(BEGIN_DATE) + 2 DAY)
WHEN DAYOFWEEK(BEGIN_DATE) = 1 THEN (DATE(BEGIN_DATE) + 1 DAY)
ELSE BEGIN_DATE
END);
SET END_DATE_V = (CASE
WHEN DAYOFWEEK(END_DATE) = 7 THEN (DATE(END_DATE) - 1 DAY)
WHEN DAYOFWEEK(END_DATE) = 1 THEN (DATE(END_DATE) - 2 DAY)
ELSE END_DATE
END);
SET STDT_FL = (SELECT INTEGER(BUS_DAY_FL) FROM RCTG01995_HUB_MART_RPT.WHS_BUS_DAY_REF WHERE BEGIN_DATE_V = CAL_DT);
SET ENDT_FL = (SELECT INTEGER(BUS_DAY_FL) FROM RCTG01995_HUB_MART_RPT.WHS_BUS_DAY_REF WHERE END_DATE_V = CAL_DT);
SET DATE_DIFF = (CASE
WHEN BEGIN_DATE >= END_DATE THEN 0
WHEN ((DAYOFWEEK(BEGIN_DATE) = 7 AND DAYOFWEEK(END_DATE) = 1) OR
          (DAYOFWEEK(BEGIN_DATE) = 1 AND DAYOFWEEK(END_DATE) = 2) OR
          (DAYOFWEEK(BEGIN_DATE) = 6 AND DAYOFWEEK(END_DATE) = 7)) AND
          BEGIN_DATE = (DATE(END_DATE) - 1 DAY) THEN 0
WHEN ((DAYOFWEEK(BEGIN_DATE) = 7 AND DAYOFWEEK(END_DATE) = 2) OR
          (DAYOFWEEK(BEGIN_DATE) = 6 AND DAYOFWEEK(END_DATE) = 1)) AND
          BEGIN_DATE = (DATE(END_DATE) - 2 DAY) THEN 0
ELSE ABS(ENDT_FL - STDT_FL)
END);
        Return DATE_DIFF;End;


--"DB2 SQL Error: SQLCODE=-456, SQLSTATE=42710, SQLERRMC=RCTG01995_HUB_MART_RPT.BUS_DAY_DIFF;BUS_DAY_DIFF, DRIVER=4.32.28"

CREATE FUNCTION EXPLAIN_GET_MSGS( EXPLAIN_REQUESTER VARCHAR(128 OCTETS),
                                  EXPLAIN_TIME      TIMESTAMP,
                                  SOURCE_NAME       VARCHAR(128 OCTETS),
                                  SOURCE_SCHEMA     VARCHAR(128 OCTETS),
                                  SOURCE_VERSION    VARCHAR(64 OCTETS),
                                  EXPLAIN_LEVEL     CHAR(1 OCTETS),
                                  STMTNO            INTEGER,
                                  SECTNO            INTEGER,
                                  INLOCALE          VARCHAR(33 OCTETS) )
  RETURNS TABLE ( EXPLAIN_REQUESTER VARCHAR(128 OCTETS),
                  EXPLAIN_TIME      TIMESTAMP,
                  SOURCE_NAME       VARCHAR(128 OCTETS),
                  SOURCE_SCHEMA     VARCHAR(128 OCTETS),
                  SOURCE_VERSION    VARCHAR(64 OCTETS),
                  EXPLAIN_LEVEL     CHAR(1 OCTETS),
                  STMTNO            INTEGER,
                  SECTNO            INTEGER,
                  DIAGNOSTIC_ID     INTEGER,
                  LOCALE            VARCHAR(33 OCTETS),
                  MSG               VARCHAR(4096 OCTETS) )
  SPECIFIC EXPLAIN_GET_MSGS
  LANGUAGE SQL
  DETERMINISTIC
  NO EXTERNAL ACTION
  READS SQL DATA
  RETURN SELECT A.A_EXPLAIN_REQUESTER,
                A.A_EXPLAIN_TIME,
                A.A_SOURCE_NAME,
                A.A_SOURCE_SCHEMA,
                A.A_SOURCE_VERSION,
                A.A_EXPLAIN_LEVEL,
                A.A_STMTNO,
                A.A_SECTNO,
                A.A_DIAGNOSTIC_ID,
                F.LOCALE,
                F.MSG
         FROM EXPLAIN_DIAGNOSTIC A( A_EXPLAIN_REQUESTER,
                                    A_EXPLAIN_TIME,
                                    A_SOURCE_NAME,
                                    A_SOURCE_SCHEMA,
                                    A_SOURCE_VERSION,
                                    A_EXPLAIN_LEVEL,
                                    A_STMTNO,
                                    A_SECTNO,
                                    A_DIAGNOSTIC_ID,
                                    A_CODE ),
              TABLE( SYSPROC.EXPLAIN_GET_MSG2(
                       INLOCALE,
                       A.A_CODE,
                       ( SELECT TOKEN FROM EXPLAIN_DIAGNOSTIC_DATA B
                         WHERE A.A_EXPLAIN_REQUESTER = B.EXPLAIN_REQUESTER
                           AND A.A_EXPLAIN_TIME      = B.EXPLAIN_TIME
                           AND A.A_SOURCE_NAME       = B.SOURCE_NAME
                           AND A.A_SOURCE_SCHEMA     = B.SOURCE_SCHEMA
                           AND A.A_SOURCE_VERSION    = B.SOURCE_VERSION
                           AND A.A_EXPLAIN_LEVEL     = B.EXPLAIN_LEVEL
                           AND A.A_STMTNO            = B.STMTNO
                           AND A.A_SECTNO            = B.SECTNO
                           AND A.A_DIAGNOSTIC_ID     = B.DIAGNOSTIC_ID
                           AND B.ORDINAL=1 ),
                       ( SELECT TOKEN FROM EXPLAIN_DIAGNOSTIC_DATA B
                         WHERE A.A_EXPLAIN_REQUESTER = B.EXPLAIN_REQUESTER
                           AND A.A_EXPLAIN_TIME      = B.EXPLAIN_TIME
                           AND A.A_SOURCE_NAME       = B.SOURCE_NAME
                           AND A.A_SOURCE_SCHEMA     = B.SOURCE_SCHEMA

                           AND A.A_SOURCE_VERSION    = B.SOURCE_VERSION
                           AND A.A_EXPLAIN_LEVEL     = B.EXPLAIN_LEVEL
                           AND A.A_STMTNO            = B.STMTNO
                           AND A.A_SECTNO            = B.SECTNO
                           AND A.A_DIAGNOSTIC_ID     = B.DIAGNOSTIC_ID
                           AND B.ORDINAL=2 ),
                       ( SELECT TOKEN FROM EXPLAIN_DIAGNOSTIC_DATA B
                         WHERE A.A_EXPLAIN_REQUESTER = B.EXPLAIN_REQUESTER
                           AND A.A_EXPLAIN_TIME      = B.EXPLAIN_TIME
                           AND A.A_SOURCE_NAME       = B.SOURCE_NAME
                           AND A.A_SOURCE_SCHEMA     = B.SOURCE_SCHEMA
                           AND A.A_SOURCE_VERSION    = B.SOURCE_VERSION
                           AND A.A_EXPLAIN_LEVEL     = B.EXPLAIN_LEVEL
                           AND A.A_STMTNO            = B.STMTNO
                           AND A.A_SECTNO            = B.SECTNO
                           AND A.A_DIAGNOSTIC_ID     = B.DIAGNOSTIC_ID
                           AND B.ORDINAL=3 ) ) ) F
         WHERE ( EXPLAIN_REQUESTER IS NULL OR
                 EXPLAIN_REQUESTER = A.A_EXPLAIN_REQUESTER )
           AND ( EXPLAIN_TIME      IS NULL OR
                 EXPLAIN_TIME      = A.A_EXPLAIN_TIME      )
           AND ( SOURCE_NAME       IS NULL OR
                 SOURCE_NAME       = A.A_SOURCE_NAME       )
           AND ( SOURCE_SCHEMA     IS NULL OR
                 SOURCE_SCHEMA     = A.A_SOURCE_SCHEMA     )
           AND ( SOURCE_VERSION    IS NULL OR
                 SOURCE_VERSION    = A.A_SOURCE_VERSION    )
           AND ( EXPLAIN_LEVEL     IS NULL OR
                 EXPLAIN_LEVEL     = A.A_EXPLAIN_LEVEL     )
           AND ( STMTNO            IS NULL OR
                 STMTNO            = A.A_STMTNO            )
           AND ( SECTNO            IS NULL OR
                 SECTNO            = A.A_SECTNO            );


--"DB2 SQL Error: SQLCODE=-104, SQLSTATE=42601, SQLERRMC=;;_SECTNO            );END-OF-STATEMENT, DRIVER=4.32.28"

CREATE FUNCTION EXPLAIN_GET_MSGS( EXPLAIN_REQUESTER VARCHAR(128 OCTETS),
                                  EXPLAIN_TIME      TIMESTAMP,
                                  SOURCE_NAME       VARCHAR(128 OCTETS),
                                  SOURCE_SCHEMA     VARCHAR(128 OCTETS),
                                  SOURCE_VERSION    VARCHAR(64 OCTETS),
                                  EXPLAIN_LEVEL     CHAR(1 OCTETS),
                                  STMTNO            INTEGER,
                                  SECTNO            INTEGER,
                                  INLOCALE          VARCHAR(33 OCTETS) )
  RETURNS TABLE ( EXPLAIN_REQUESTER VARCHAR(128 OCTETS),
                  EXPLAIN_TIME      TIMESTAMP,
                  SOURCE_NAME       VARCHAR(128 OCTETS),
                  SOURCE_SCHEMA     VARCHAR(128 OCTETS),
                  SOURCE_VERSION    VARCHAR(64 OCTETS),
                  EXPLAIN_LEVEL     CHAR(1 OCTETS),
                  STMTNO            INTEGER,
                  SECTNO            INTEGER,
                  DIAGNOSTIC_ID     INTEGER,
                  LOCALE            VARCHAR(33 OCTETS),
                  MSG               VARCHAR(4096 OCTETS) )
  SPECIFIC EXPLAIN_GET_MSGS
  LANGUAGE SQL
  DETERMINISTIC
  NO EXTERNAL ACTION
  READS SQL DATA
  RETURN SELECT A.A_EXPLAIN_REQUESTER,
                A.A_EXPLAIN_TIME,
                A.A_SOURCE_NAME,
                A.A_SOURCE_SCHEMA,
                A.A_SOURCE_VERSION,
                A.A_EXPLAIN_LEVEL,
                A.A_STMTNO,
                A.A_SECTNO,
                A.A_DIAGNOSTIC_ID,
                F.LOCALE,
                F.MSG
         FROM EXPLAIN_DIAGNOSTIC A( A_EXPLAIN_REQUESTER,
                                    A_EXPLAIN_TIME,
                                    A_SOURCE_NAME,
                                    A_SOURCE_SCHEMA,
                                    A_SOURCE_VERSION,
                                    A_EXPLAIN_LEVEL,
                                    A_STMTNO,
                                    A_SECTNO,
                                    A_DIAGNOSTIC_ID,
                                    A_CODE ),
              TABLE( SYSPROC.EXPLAIN_GET_MSG2(
                       INLOCALE,
                       A.A_CODE,
                       ( SELECT TOKEN FROM EXPLAIN_DIAGNOSTIC_DATA B
                         WHERE A.A_EXPLAIN_REQUESTER = B.EXPLAIN_REQUESTER
                           AND A.A_EXPLAIN_TIME      = B.EXPLAIN_TIME
                           AND A.A_SOURCE_NAME       = B.SOURCE_NAME
                           AND A.A_SOURCE_SCHEMA     = B.SOURCE_SCHEMA
                           AND A.A_SOURCE_VERSION    = B.SOURCE_VERSION
                           AND A.A_EXPLAIN_LEVEL     = B.EXPLAIN_LEVEL
                           AND A.A_STMTNO            = B.STMTNO
                           AND A.A_SECTNO            = B.SECTNO
                           AND A.A_DIAGNOSTIC_ID     = B.DIAGNOSTIC_ID
                           AND B.ORDINAL=1 ),
                       ( SELECT TOKEN FROM EXPLAIN_DIAGNOSTIC_DATA B
                         WHERE A.A_EXPLAIN_REQUESTER = B.EXPLAIN_REQUESTER
                           AND A.A_EXPLAIN_TIME      = B.EXPLAIN_TIME
                           AND A.A_SOURCE_NAME       = B.SOURCE_NAME
                           AND A.A_SOURCE_SCHEMA     = B.SOURCE_SCHEMA

                           AND A.A_SOURCE_VERSION    = B.SOURCE_VERSION
                           AND A.A_EXPLAIN_LEVEL     = B.EXPLAIN_LEVEL
                           AND A.A_STMTNO            = B.STMTNO
                           AND A.A_SECTNO            = B.SECTNO
                           AND A.A_DIAGNOSTIC_ID     = B.DIAGNOSTIC_ID
                           AND B.ORDINAL=2 ),
                       ( SELECT TOKEN FROM EXPLAIN_DIAGNOSTIC_DATA B
                         WHERE A.A_EXPLAIN_REQUESTER = B.EXPLAIN_REQUESTER
                           AND A.A_EXPLAIN_TIME      = B.EXPLAIN_TIME
                           AND A.A_SOURCE_NAME       = B.SOURCE_NAME
                           AND A.A_SOURCE_SCHEMA     = B.SOURCE_SCHEMA
                           AND A.A_SOURCE_VERSION    = B.SOURCE_VERSION
                           AND A.A_EXPLAIN_LEVEL     = B.EXPLAIN_LEVEL
                           AND A.A_STMTNO            = B.STMTNO
                           AND A.A_SECTNO            = B.SECTNO
                           AND A.A_DIAGNOSTIC_ID     = B.DIAGNOSTIC_ID
                           AND B.ORDINAL=3 ) ) ) F
         WHERE ( EXPLAIN_REQUESTER IS NULL OR
                 EXPLAIN_REQUESTER = A.A_EXPLAIN_REQUESTER )
           AND ( EXPLAIN_TIME      IS NULL OR
                 EXPLAIN_TIME      = A.A_EXPLAIN_TIME      )
           AND ( SOURCE_NAME       IS NULL OR
                 SOURCE_NAME       = A.A_SOURCE_NAME       )
           AND ( SOURCE_SCHEMA     IS NULL OR
                 SOURCE_SCHEMA     = A.A_SOURCE_SCHEMA     )
           AND ( SOURCE_VERSION    IS NULL OR
                 SOURCE_VERSION    = A.A_SOURCE_VERSION    )
           AND ( EXPLAIN_LEVEL     IS NULL OR
                 EXPLAIN_LEVEL     = A.A_EXPLAIN_LEVEL     )
           AND ( STMTNO            IS NULL OR
                 STMTNO            = A.A_STMTNO            )
           AND ( SECTNO            IS NULL OR
                 SECTNO            = A.A_SECTNO            );




--"DB2 SQL Error: SQLCODE=-104, SQLSTATE=42601, SQLERRMC=;;_SECTNO            );END-OF-STATEMENT, DRIVER=4.32.28"

Create Procedure RCTG01995_HUB_MART_RPT.SP_RC_DUG_EXTRACT (IN CAND_HIR VARCHAR(50),
IN REPORT_START_DATE VARCHAR(10), IN REPORT_END_DATE VARCHAR(10)) 
	Specific SP_RC_DUG_EXTRACT 
	Dynamic Result Sets 0 
	Modifies SQL Data   
	Called on Null Input  
	Language SQL 
Begin
DECLARE SQLSTMT VARCHAR(6000);DECLARE SQLSTMT1 VARCHAR(6000);DECLARE SQLSTMT2 VARCHAR(6000);DECLARE COND1 VARCHAR(300);DECLARE COND2 VARCHAR(300);DECLARE TABLENAME VARCHAR(30);IF CAND_HIR IS NOT NULL AND LTRIM(RTRIM(UPPER(CAND_HIR))) IN ('CANDIDATE', 'CANDIDATES', 'C') THEN
	IF (REPORT_START_DATE IS NULL OR REPORT_END_DATE IS NULL) OR (REPORT_START_DATE IS NOT NULL AND REPORT_END_DATE IS NOT NULL AND REPORT_START_DATE > REPORT_END_DATE) THEN
		SET COND1 = '1=1)';	ELSE IF REPORT_START_DATE <= REPORT_END_DATE THEN
		SET COND1 = ' DATE(REQ.REQ_STAT_EFF_DTTM) BETWEEN ''' || CHAR(REPORT_START_DATE) || ''' AND ''' || CHAR(REPORT_END_DATE) || ''')';	END IF;	END IF;SET SQLSTMT = 'SELECT * FROM (
	SELECT APPL.CAND_ID as "Applid",
       REQ.REQ_ID AS "Req       CASE WHEN LTRIM(RTRIM(UPPER(APPL.APPL_GDR_DS))) = ''MALE'' THEN ''M''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_GDR_DS))) = ''FEMALE'' THEN ''F''
			WHEN LTRIM(RTRIM(UPPER(APPL.APPL_GDR_DS))) = ''I DO NOT WISH TO PROVIDE THIS INFORMATION'' THEN ''U''	        
	   ELSE APPL.APPL_GDR_DS END AS "Sex",
	   CAND.CAND_EE_NUM AS "PS Emplid",
	   SUBSTR(LTRIM(RTRIM(REQ.REQ_TMPLATE_JOB_CD)),1,6) AS "Jobcode",
	   REQ.REQ_TITL_ML AS "Req Job Title",
	   SUBSTR(LTRIM(RTRIM(REQ.REQ_DEPT_CD)),1,10) AS "Department Code",
       LOC.LOC_CODE AS "Location Code",
	   CASE WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''WHITE'' THEN ''1''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''BLACK OR AFRICAN AMERICAN'' THEN ''2''
			WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''HISPANIC OR LATINO'' THEN ''3''	        
		    WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''ASIA'' THEN ''4''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''AMERICAN INDIAN OR ALASKA NATIVE'' THEN ''5''
			WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER'' THEN ''6''	        
		    WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''TWO OR MORE RACES'' THEN ''7''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''I DO NOT WISH TO PROVIDE THIS INFORMATION'' THEN ''U''
			ELSE APPL.APPL_RACE_DS END AS "Ethnic Group",
	   CASE WHEN POA.APPL_SK IS NOT NULL AND POA.APPLCNT_CAND_MIDDLE_NM IS NOT NULL THEN nvl(POA.APPLCNT_CAND_LAST_NM, '''') || '', '' || nvl(POA.APPLCNT_CAND_FIRST_NM, '''') || '', '' || nvl(POA.APPLCNT_CAND_MIDDLE_NM,'''')
			WHEN POA.APPL_SK IS NOT NULL AND POA.APPLCNT_CAND_MIDDLE_NM IS NULL THEN nvl(POA.APPLCNT_CAND_LAST_NM, '''') || '', '' || nvl(POA.APPLCNT_CAND_FIRST_NM, '''')
			WHEN CAND.CAND_MIDDLE_INITIAL IS NOT NULL THEN nvl(CAND.CAND_LAST_NM, '''') || '', '' || nvl(CAND.CAND_FIRST_NM, '''') || '', '' || nvl(CAND.CAND_MIDDLE_INITIAL, '''')
			ELSE nvl(CAND.CAND_LAST_NM, '''') || '', '' || nvl(CAND.CAND_FIRST_NM, '''') END AS "Name",
	   CAPD.APPL_CSW_STEP AS "CSW Step",
	   CAPD.APPL_CSW_STAT AS "CSW Status",
	   CASE WHEN LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) IN (''NEW'', ''INITIAL SCREEN'', ''INTERVIEW'', ''REFERENCE CHECK'', ''HM INTERVIEW'', ''RESUME SCREENING'', ''CAMPUS INTERVIEW'', ''FINAL INTERVIEW'') THEN ''020''
			WHEN (LTRIM(RTRIM(UPPER(CAPD.APPL_WKF_NM))) IN (''COLLEGE INTERN'', ''COLLEGE TRAINING'') AND LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''OFFER'') OR LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''HIRE'' THEN ''090''
			WHEN LTRIM(RTRIM(UPPER(CAPD.APPL_WKF_NM))) NOT IN (''COLLEGE INTERN'', ''COLLEGE TRAINING'') AND LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''OFFER'' THEN ''070''
			WHEN LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''PRE-HIRE CHECK'' THEN ''080'' END AS "Status Code",
	   DATE(REQ.REQ_STAT_EFF_DTTM) AS "Requisition Status Date",
	   AFC.APPL_LATEST_HIRED_DT AS "Hire Step/Status Date",
	   OFR.JOB_OFR___ACPTD_DT AS "Date of  Offer Accept",
	   REQ.REQ_NO_OPENINGS AS "Openings Target",
	   RUDF.REQ_UDF_VAL_01 AS "MI_Career_Band_CD",
	   REQ.REQ_CURR_STAT_PARN_DS AS "Requisition Status",
	   RUDF.REQ_UDF_VAL_04 AS "Mgmt or Non-Mgmt/Hourly",
	   ORG.ORG_NM AS "Business Unit",
	   ORG.ORG_CD AS "Business Code"
FROM   WHS_RC_REQ_DIM REQ INNER JOIN WHS_RC_APPL_FACT AFC
ON     REQ.REQ_SK = AFC.REQ_SK
INNER JOIN WHS_RC_APPL_DIM APPL
ON	   APPL.APPL_SK = AFC.APPL_SK
LEFT OUTER JOIN WHS_RC_CAND_DIM CAND 
ON     AFC.CAND_ID = CAND.CAND_ID
LEFT OUTER JOIN WHS_RC_LOC_DIM LOC
ON     AFC.LOC_SK = LOC.LOC_SK
AND	   LOC.LOC_LVL_NUM = 4
LEFT OUTER JOIN WHS_RC_POA_DIM POA
ON     APPL.APPL_SK = POA.APPL_SK
LEFT OUTER JOIN WHS_RC_CAND_PRGRS_DTL CAPD
ON 	   CAPD.APPL_SK = APPL.APPL_SK
AND	   CAPD.APPL_CSW_ENDT = TO_DATE(''9999-12-31'',''YYYY-MM-DD'')
LEFT OUTER JOIN (SELECT APPL_SK, JOB_OFR___ACPTD_DT FROM (SELECT APPL_SK , JOB_OFR___ACPTD_DT, ROW_NUMBER() OVER (PARTITION BY APPL_SK ORDER BY JOB_OFR___ACPTD_DT DESC)RN FROM WHS_RC_OFR_DIM where JOB_OFR___ACPTD_DT IS NOT NULL) WHERE RN = 1) OFR
ON	   OFR.APPL_SK = APPL.APPL_SK
INNER JOIN WHS_RC_REQ_UDF_DIM RUDF
ON	   RUDF.REQ_SK = REQ.REQ_SK
LEFT OUTER JOIN WHS_RC_ORG_DIM ORG
ON 	   AFC.ORG_UNIT_SK = ORG.ORG_UNIT_SK
AND	   ORG.ORG_LVL = 2
LEFT OUTER JOIN WHS_RC_LOC_DIM LOC1
ON     AFC.LOC_SK = LOC1.LOC_SK
WHERE  REQ.REQ_CURR_STAT_PARN_CD = 7 AND APPL.APPL_IS_COMPLETED = ''true'' AND UPPER(LTRIM(RTRIM(LOC1.LOC_CTRY_CD))) = ''USA'' AND AFC.EFF_ENDT_SK= 99991231 AND APPL.DEL_FLAG=''N'' AND ' || COND1;END IF;IF CAND_HIR IS NOT NULL AND LTRIM(RTRIM(UPPER(CAND_HIR))) IN ('HIRE', 'HIRED', 'HIRES', 'H') THEN
	IF (REPORT_START_DATE IS NULL OR REPORT_END_DATE IS NULL) OR (REPORT_START_DATE IS NOT NULL AND REPORT_END_DATE IS NOT NULL AND REPORT_START_DATE > REPORT_END_DATE) THEN
		SET COND2 = '1=1';	ELSE IF REPORT_START_DATE <= REPORT_END_DATE THEN
		SET COND2 = ' ((AFC.APPL_LATEST_HIRED_DT BETWEEN ''' || CHAR(REPORT_START_DATE) || ''' AND ''' || CHAR(REPORT_END_DATE) || ''') OR (OFR.JOB_OFR___ACPTD_DT BETWEEN ''' || CHAR(REPORT_START_DATE) || ''' AND ''' || CHAR(REPORT_END_DATE) || '''))';	END IF;	END IF;SET SQLSTMT = 'SELECT * FROM (
	SELECT APPL.CAND_ID as "Applid",
       REQ.REQ_ID AS "Req       CASE WHEN LTRIM(RTRIM(UPPER(APPL.APPL_GDR_DS))) = ''MALE'' THEN ''M''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_GDR_DS))) = ''FEMALE'' THEN ''F''
			WHEN LTRIM(RTRIM(UPPER(APPL.APPL_GDR_DS))) = ''I DO NOT WISH TO PROVIDE THIS INFORMATION'' THEN ''U''	        
	   ELSE APPL.APPL_GDR_DS END AS "Sex",
	   CAND.CAND_EE_NUM AS "PS Emplid",
	   SUBSTR(LTRIM(RTRIM(REQ.REQ_TMPLATE_JOB_CD)),1,6) AS "Jobcode",
	   REQ.REQ_TITL_ML AS "Req Job Title",
	   SUBSTR(LTRIM(RTRIM(REQ.REQ_DEPT_CD)),1,10) AS "Department Code",
       LOC.LOC_CODE AS "Location Code",
	   CASE WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''WHITE'' THEN ''1''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''BLACK OR AFRICAN AMERICAN'' THEN ''2''
			WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''HISPANIC OR LATINO'' THEN ''3''	        
		    WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''ASIA'' THEN ''4''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''AMERICAN INDIAN OR ALASKA NATIVE'' THEN ''5''
			WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER'' THEN ''6''	        
		    WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''TWO OR MORE RACES'' THEN ''7''
            WHEN LTRIM(RTRIM(UPPER(APPL.APPL_RACE_DS))) = ''I DO NOT WISH TO PROVIDE THIS INFORMATION'' THEN ''U''
			ELSE APPL.APPL_RACE_DS END AS "Ethnic Group",
	   CASE WHEN POA.APPL_SK IS NOT NULL AND POA.APPLCNT_CAND_MIDDLE_NM IS NOT NULL THEN nvl(POA.APPLCNT_CAND_LAST_NM, '''') || '', '' || nvl(POA.APPLCNT_CAND_FIRST_NM, '''') || '', '' || nvl(POA.APPLCNT_CAND_MIDDLE_NM,'''')
			WHEN POA.APPL_SK IS NOT NULL AND POA.APPLCNT_CAND_MIDDLE_NM IS NULL THEN nvl(POA.APPLCNT_CAND_LAST_NM, '''') || '', '' || nvl(POA.APPLCNT_CAND_FIRST_NM, '''')
			WHEN CAND.CAND_MIDDLE_INITIAL IS NOT NULL THEN nvl(CAND.CAND_LAST_NM, '''') || '', '' || nvl(CAND.CAND_FIRST_NM, '''') || '', '' || nvl(CAND.CAND_MIDDLE_INITIAL, '''')
			ELSE nvl(CAND.CAND_LAST_NM, '''') || '', '' || nvl(CAND.CAND_FIRST_NM, '''') END AS "Name",
	   CAPD.APPL_CSW_STEP AS "CSW Step",
	   CAPD.APPL_CSW_STAT AS "CSW Status",
	   CASE WHEN LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) IN (''NEW'', ''INITIAL SCREEN'', ''INTERVIEW'', ''REFERENCE CHECK'', ''HM INTERVIEW'', ''RESUME SCREENING'', ''CAMPUS INTERVIEW'', ''FINAL INTERVIEW'') THEN ''020''
			WHEN (LTRIM(RTRIM(UPPER(CAPD.APPL_WKF_NM))) IN (''COLLEGE INTERN'', ''COLLEGE TRAINING'') AND LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''OFFER'') OR LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''HIRE'' THEN ''090''
			WHEN LTRIM(RTRIM(UPPER(CAPD.APPL_WKF_NM))) NOT IN (''COLLEGE INTERN'', ''COLLEGE TRAINING'') AND LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''OFFER'' THEN ''070''
			WHEN LTRIM(RTRIM(UPPER(CAPD.APPL_CSW_STEP))) = ''PRE-HIRE CHECK'' THEN ''080'' END AS "Status Code",
	   DATE(REQ.REQ_STAT_EFF_DTTM) AS "Requisition Status Date",
	   AFC.APPL_LATEST_HIRED_DT AS "Hire Step/Status Date",
	   OFR.JOB_OFR___ACPTD_DT AS "Date of  Offer Accept",
	   REQ.REQ_NO_OPENINGS AS "Openings Target",
	   RUDF.REQ_UDF_VAL_01 AS "MI_Career_Band_CD",
	   REQ.REQ_CURR_STAT_PARN_DS AS "Requisition Status",
	   RUDF.REQ_UDF_VAL_04 AS "Mgmt or Non-Mgmt/Hourly",
	   ORG.ORG_NM AS "Business Unit",
	   ORG.ORG_CD AS "Business Code"
FROM   WHS_RC_REQ_DIM REQ INNER JOIN WHS_RC_APPL_FACT AFC
ON     REQ.REQ_SK = AFC.REQ_SK
INNER JOIN WHS_RC_APPL_DIM APPL
ON	   APPL.APPL_SK = AFC.APPL_SK
LEFT OUTER JOIN WHS_RC_CAND_DIM CAND 
ON     AFC.CAND_ID = CAND.CAND_ID
LEFT OUTER JOIN WHS_RC_LOC_DIM LOC
ON     AFC.LOC_SK = LOC.LOC_SK
AND	   LOC.LOC_LVL_NUM = 4
LEFT OUTER JOIN WHS_RC_POA_DIM POA
ON     APPL.APPL_SK = POA.APPL_SK
LEFT OUTER JOIN WHS_RC_CAND_PRGRS_DTL CAPD
ON 	   CAPD.APPL_SK = APPL.APPL_SK
AND	   CAPD.APPL_CSW_ENDT = TO_DATE(''9999-12-31'',''YYYY-MM-DD'')
LEFT OUTER JOIN (SELECT APPL_SK, JOB_OFR___ACPTD_DT FROM (SELECT APPL_SK , JOB_OFR___ACPTD_DT, ROW_NUMBER() OVER (PARTITION BY APPL_SK ORDER BY JOB_OFR___ACPTD_DT DESC)RN FROM WHS_RC_OFR_DIM where JOB_OFR___ACPTD_DT IS NOT NULL) WHERE RN = 1) OFR
ON	   OFR.APPL_SK = APPL.APPL_SK
INNER JOIN WHS_RC_REQ_UDF_DIM RUDF
ON	   RUDF.REQ_SK = REQ.REQ_SK
LEFT OUTER JOIN WHS_RC_ORG_DIM ORG
ON 	   AFC.ORG_UNIT_SK = ORG.ORG_UNIT_SK
AND	   ORG.ORG_LVL = 2
LEFT OUTER JOIN WHS_RC_LOC_DIM LOC1
ON     AFC.LOC_SK = LOC1.LOC_SK
WHERE  UPPER(APPL.APPL_CURR_REF_STAT_DS) = ''HIRED''
AND    UPPER(RUDF.REQ_UDF_CD_04) = ''M''
AND    REQ.REQ_CURR_STAT_PARN_CD = 7 AND  UPPER(LTRIM(RTRIM(LOC1.LOC_CTRY_CD))) = ''USA'' AND AFC.EFF_ENDT_SK= 99991231 AND APPL.DEL_FLAG=''N'' AND ' || COND2 || ')';END IF;EXECUTE IMMEDIATE 'SET SCHEMA RCTG01995_HUB_MART_RPT';SET TABLENAME= 'WHS_RC_DUG_EXTRACT_'||CAND_HIR;SET SQLSTMT2 = 'INSERT INTO '||TABLENAME||' '||SQLSTMT;EXECUTE IMMEDIATE SQLSTMT2;End;

--"DB2 SQL Error: SQLCODE=-454, SQLSTATE=42723, SQLERRMC=RCTG01995_HUB_MART_RPT.SP_RC_DUG_EXTRACT, DRIVER=4.32.28"